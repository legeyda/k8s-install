- name: 'get stat for {{cert_dir}}/cert.pem'
  stat:
    path: '{{cert_dir}}/cert.pem'
  register: gen_cert_stat_result

- name: generate remote certifiicate signed with local ca
  when: gen_cert_stat_result.stat.exists == False
  block:

    - name: install openssl
      package:
        name: openssl
        state: present

    - name: generate cert request on remote and fetch
      block:
        - name: ensure remote dir exists
          file: 
            path: '{{cert_dir}}'
            state: directory
            recurse: yes

        - name: 'generate cert request {{cert_dir}}/cert.csr remotely'
          command:
            argv:
              - openssl
              - req
              - -newkey
              - 'rsa:{{rsa_key_size}}'
              - -keyout
              - '{{cert_dir}}/key.pem'
              - -out
              - '{{cert_dir}}/csr.pem'
              - -nodes
              - -subj
              - '/CN={{common_name}}/C={{country_name}}/L={{locality}}/O={{organization}}/OU={{organizational_unit}}/ST={{state_of_residence}}'
              - -addext 
              - |
                  subjectAltName={%- for hostname in cert_hostnames|default(['localhost', internal_hostname|default(inventory_hostname)])|select('defined') -%}
                    {%- if hostname is regex('^\d+\.\d+\.\d+\.\d+$') -%}
                      IP:
                    {%- else -%}
                      DNS:
                    {%- endif -%}
                    {{hostname}}{%- if not loop.last -%},{%- endif -%}
                  {%- endfor -%}

        - name: fetch cert request for local signing
          fetch:
            src: '{{cert_dir}}/csr.pem'
            dest: '{{playbook_dir}}/target/fetch'
          register: fetch_result

    - name: '(copy request to ca host and) sign cert request with ca'
      delegate_to: localhost
      become: no
      block:
        - set_fact:
            cert_signing_request: '{{fetch_result.dest}}'


        # see https://security.stackexchange.com/a/176084
        - copy:
            content: |
              subjectAltName = {% for hostname in cert_hostnames|default(['localhost', internal_hostname|default(inventory_hostname)])|select('defined') -%}
                {%- if hostname is regex('^\d+\.\d+\.\d+\.\d+$') -%}
                  IP:
                {%- else -%}
                  DNS:
                {%- endif -%}
                {{hostname}}{% if not loop.last %},{% endif %}
              {%- endfor -%}
            dest: '{{cert_signing_request|dirname}}/openssl.config'

        - name: sign cert request locally with ca private key
          command:
            argv:
              - openssl
              - x509
              - -req
              - -in
              - '{{cert_signing_request}}'
              - -CA
              - '{{playbook_dir}}/target/cert/ca/cert.pem'
              - -CAkey
              - '{{playbook_dir}}/target/cert/ca/key.pem'
              - -out
              - '{{cert_signing_request|dirname}}/cert.pem'
              - -CAcreateserial
              - -days
              - 9999
              - -extfile
              - '{{cert_signing_request|dirname}}/openssl.config'

    - name: copy back to remote signed certificate for {{cert_dir}}
      copy:
        src: '{{cert_signing_request|dirname}}/cert.pem'
        dest: '{{cert_dir}}'
        backup: yes
